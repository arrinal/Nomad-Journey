name: iOS Distribute
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - closed

jobs:
  build_with_signing:
    runs-on: macos-latest
    if: (github.event_name == 'push' && !contains(github.event.head_commit.message, 'Merge pull request')) || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install the Apple certificate p12 and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.P12_BASE64 }}
          P12_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/manual.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.152.0
        with:
          ruby-version: 3.2.2
            
      - name: Install dependencies
        run: |
          gem install fastlane

      - name: Set PR Title as Env Var
        run: echo "PR_TITLE=${{ github.event.pull_request.title }}" >> $GITHUB_ENV

      - name: Build app
        continue-on-error: true
        run: fastlane distribute --verbose || echo "BUILD_FAILED=true" >> $GITHUB_ENV
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}

      - name: Notify Slack
        run: fastlane notify_slack build_failed:${{ env.BUILD_FAILED }}
        env:
          FAD_LINK: ${{ secrets.FAD_LINK }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
